Running with ippo and supereasy for seed={7}
/alpha/ComplexOvercooked/src/runners/../../envs/gymma.py:15: UserWarning: PettingZoo is not installed, so these environments will not be available! To install, run `pip install pettingzoo`
  warnings.warn(
/alpha/ComplexOvercooked/src/runners/../../envs/gymma.py:22: UserWarning: VMAS is not installed, so these environments will not be available! To install, run `pip install 'vmas[gymnasium]'`
  warnings.warn(
[DEBUG 09:54:45] git.cmd Popen(['git', 'version'], cwd=/alpha/ComplexOvercooked, stdin=None, shell=False, universal_newlines=False)
[DEBUG 09:54:45] git.cmd Popen(['git', 'version'], cwd=/alpha/ComplexOvercooked, stdin=None, shell=False, universal_newlines=False)
[DEBUG 09:54:45] git.cmd Popen(['git', 'diff', '--cached', '--abbrev=40', '--full-index', '--raw'], cwd=/alpha/ComplexOvercooked, stdin=None, shell=False, universal_newlines=False)
[DEBUG 09:54:45] git.cmd Popen(['git', 'diff', '--abbrev=40', '--full-index', '--raw'], cwd=/alpha/ComplexOvercooked, stdin=None, shell=False, universal_newlines=False)
[DEBUG 09:54:45] git.cmd Popen(['git', 'cat-file', '--batch-check'], cwd=/alpha/ComplexOvercooked, stdin=<valid stream>, shell=False, universal_newlines=False)
[DEBUG 09:54:45] git.cmd Popen(['git', 'diff', '--cached', '--abbrev=40', '--full-index', '--raw'], cwd=/alpha/ComplexOvercooked, stdin=None, shell=False, universal_newlines=False)
[DEBUG 09:54:45] git.cmd Popen(['git', 'diff', '--abbrev=40', '--full-index', '--raw'], cwd=/alpha/ComplexOvercooked, stdin=None, shell=False, universal_newlines=False)
[DEBUG 09:54:45] git.cmd Popen(['git', 'cat-file', '--batch-check'], cwd=/alpha/ComplexOvercooked, stdin=<valid stream>, shell=False, universal_newlines=False)
[DEBUG 09:54:45] git.cmd Popen(['git', 'diff', '--cached', '--abbrev=40', '--full-index', '--raw'], cwd=/alpha/ComplexOvercooked, stdin=None, shell=False, universal_newlines=False)
[DEBUG 09:54:45] git.cmd Popen(['git', 'diff', '--abbrev=40', '--full-index', '--raw'], cwd=/alpha/ComplexOvercooked, stdin=None, shell=False, universal_newlines=False)
[DEBUG 09:54:45] git.cmd Popen(['git', 'cat-file', '--batch-check'], cwd=/alpha/ComplexOvercooked, stdin=<valid stream>, shell=False, universal_newlines=False)
[DEBUG 09:54:45] git.cmd Popen(['git', 'diff', '--cached', '--abbrev=40', '--full-index', '--raw'], cwd=/alpha/ComplexOvercooked, stdin=None, shell=False, universal_newlines=False)
[DEBUG 09:54:45] git.cmd Popen(['git', 'diff', '--abbrev=40', '--full-index', '--raw'], cwd=/alpha/ComplexOvercooked, stdin=None, shell=False, universal_newlines=False)
[DEBUG 09:54:45] git.cmd Popen(['git', 'cat-file', '--batch-check'], cwd=/alpha/ComplexOvercooked, stdin=<valid stream>, shell=False, universal_newlines=False)
[INFO 09:54:45] root Saving to FileStorageObserver in results/sacred.
config_dict: {'runner': 'parallel', 'mac': 'basic_mac', 'env': 'overcooked2', 'common_reward': True, 'reward_scalarisation': 'mean', 'env_args': {'map_name': 'supereasy', 'ifrender': False}, 'batch_size_run': 10, 'test_nepisode': 3, 'test_interval': 50000, 'test_greedy': True, 'log_interval': 6000, 'runner_log_interval': 6000, 'learner_log_interval': 6000, 't_max': 20000000.0, 'use_cuda': False, 'buffer_cpu_only': True, 'use_tensorboard': False, 'use_wandb': True, 'wandb_team': 'wanghm', 'wandb_project': 'epymarl_overcooked2', 'wandb_mode': 'online', 'wandb_save_model': False, 'save_model': True, 'save_model_interval': 100000, 'checkpoint_path': '', 'evaluate': False, 'render': False, 'load_step': 0, 'save_replay': False, 'local_results_path': 'results', 'gamma': 0.99, 'batch_size': 10, 'buffer_size': 10, 'lr': 0.001, 'optim_alpha': 0.99, 'optim_eps': 1e-05, 'grad_norm_clip': 10, 'add_value_last_step': True, 'agent': 'rnn', 'hidden_dim': 64, 'obs_agent_id': True, 'obs_last_action': False, 'repeat_id': 1, 'label': 'default_label', 'hypergroup': None, 'action_selector': 'soft_policies', 'mask_before_softmax': True, 'target_update_interval_or_tau': 0.01, 'obs_individual_obs': False, 'agent_output_type': 'pi_logits', 'learner': 'ppo_learner', 'standardise_returns': False, 'standardise_rewards': False, 'use_rnn': True, 'q_nstep': 5, 'critic_type': 'ac_critic', 'epochs': 8, 'eps_clip': 0.1, 'entropy_coef': 0.01, 'name': 'ippo', 'lr_decay': True, 'reward_shaping_horizon': 10000000.0}
Traceback (most recent call last):
  File "/alpha/ComplexOvercooked/src/main.py", line 89, in <module>
    ex.run_commandline(params)
  File "/home/wanghm/anaconda3/envs/proagent/lib/python3.9/site-packages/sacred/experiment.py", line 301, in run_commandline
    config_updates, named_configs = get_config_updates(args["UPDATE"])
  File "/home/wanghm/anaconda3/envs/proagent/lib/python3.9/site-packages/sacred/arg_parser.py", line 68, in get_config_updates
    set_by_dotted_path(config_updates, path, _convert_value(value))
  File "/home/wanghm/anaconda3/envs/proagent/lib/python3.9/site-packages/sacred/arg_parser.py", line 216, in _convert_value
    return restore(ast.literal_eval(value))
  File "/home/wanghm/anaconda3/envs/proagent/lib/python3.9/site-packages/sacred/serializer.py", line 33, in restore
    return json.decode(_json.dumps(flat), keys=True, on_missing="error")
  File "/home/wanghm/anaconda3/envs/proagent/lib/python3.9/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/home/wanghm/anaconda3/envs/proagent/lib/python3.9/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/home/wanghm/anaconda3/envs/proagent/lib/python3.9/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/home/wanghm/anaconda3/envs/proagent/lib/python3.9/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type set is not JSON serializable
